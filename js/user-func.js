// Generated by CoffeeScript 1.6.3
var changeField, changefunc, del, delete_from_buffer, delete_user, expand, show, theme_add, transfer_from_buffer, _internalAction, _postAction;

$(function() {
	$(".h-menu li").hover((function() {
		return $(this).stop().animate({
			width: "235px"
		}, 500);
	}), function() {
		if ($(this).hasClass("active" === false)) {
			return $(this).stop().animate({
				width: "27px"
			}, 500);
		}
	});
	return $(".user-torrent").click(function() {
		$(this).toggleClass("active");
		$(this).next().toggle();
	});
});

show = function(name) {
	$.get("include/" + name + ".php", function(data) {
		$('#content').empty().append(data);
	});
	window.clearTimeout(this.timeoutID);
	if (name === 'show_table') {
		this.timeoutID = window.setTimeout((function() {
			return show('show_table');
		}), 7000);
	} else if (name === 'show_warnings') {
		this.timeoutID = window.setTimeout((function() {
			show('show_table');
		}), 7000);
	} else {
		delete this.timeoutID;
	}
	return false;
};

expand = function(id) {
	var div;
	div = "#" + id;
	if ($(div).is(":hidden")) {
		$(div).slideDown("slow");
	} else {
		$(div).slideUp("slow");
	}
	return false;
};

$("#enter").submit(function() {
	var $form;
	$form = $(this).p = $form.find('input[name="password"]').val();
	$('#notice').empty().append('Обрабатывается запрос...').fadeIn();
	$.post("action.php", {
		action: 'enter',
		password: p
	}, (function(data) {
		if (data.error) {
			$('#notice').empty().attr('background', '#FF6633').append(data.msg).delay(3000).fadeOut(400);
		} else {
			document.location.reload();
		}
		console.log(data.error);
	}), "json");
	return false;
});

$("#torrent_add").submit(function() {
	var $form, n, n_f, s, u, u_f;
	$form = $(this);
	s = $form.find('input[type=submit]');
	n_f = $form.find('input[name="name"]');
	n = $(n_f).val();
	u_f = $form.find('input[name="url"]');
	u = $(u_f).val();
	$(s).attr('disabled', 'disabled');
	if (u !== '') {
		$('#notice').empty().append('Обрабатывается запрос...').fadeIn();
		$.post("action.php", {
			action: 'torrent_add',
			name: n,
			url: u
		}, function(data) {
			$('#notice').empty().append(data).delay(3000).fadeOut(400);
			$(s).removeAttr('disabled');
			$(n_f).val('');
			$(u_f).val('');
		});
	} else {
		alert("Вы не указали ссылку на тему!");
		$(s).removeAttr('disabled');
	}
	return false;
});

$("#serial_add").submit(function() {
	var $form, h, h_f, i, n, n_f, s, t, _i, _ref;
	$form = $(this);
	s = $form.find('input[type=submit]');
	t = $form.find('select[name="tracker"]').val();
	n_f = $form.find('input[name="name"]');
	n = $(n_f).val();
	h_f = $form.find('input[name="hd"]');
	if (t === 'novafilm.tv') {
		h = $(h_f).attr('checked');
		$form = $(this);
		h = h === 'checked' ? 1 : 0;
	}
	if (t === 'lostfilm.tv') {
		h = $(h_f).val();
		for (i = _i = 0, _ref = h_f.length; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
			if (h_f[i].checked) {
				$form = $(this);
				h = h_f[i].value;
			}
		}
	}
	$(s).attr('disabled', 'disabled');
	if (t !== '' && n !== '') {
		$('#notice').empty().append('Обрабатывается запрос...').fadeIn();
		$.post("action.php", {
			action: 'serial_add',
			tracker: t,
			name: n,
			hd: h
		}, function(data) {
			$('#notice').empty().attr('background', '#FF6633').append(data).delay(3000).fadeOut(400);
			$(s).removeAttr('disabled');
			$(n_f).val('');
			$(h_f).removeAttr('checked');
		});
	} else {
		if (t === '') {
			alert("Вы не выбрали трекер!");
			$(s).removeAttr('disabled');
		}
		if (n === '') {
			alert("Вы не указали название сериала!");
			$(s).removeAttr('disabled');
		}
	}
	return false;
});

$("#user_add").submit(function() {
	var $form, n, n_f, s, t;
	$form = $(this);
	s = $form.find('input[type=submit]');
	t = $form.find('select[name="tracker"]').val();
	n_f = $form.find('input[name="name"]');
	n = $(n_f).val();
	$(s).attr('disabled', 'disabled');
	if (t !== '' && n !== '') {
		$('#notice').empty().append('Обрабатывается запрос...').fadeIn();
		$.post("action.php", {
			action: 'serial_add',
			tracker: t,
			name: n,
			hd: h
		}, function(data) {
			$('#notice').empty().attr('background', '#FF6633').append(data).delay(3000).fadeOut(400);
			$(s).removeAttr('disabled');
			$(n_f).val('');
			$(h_f).removeAttr('checked');
		});
	} else {
		if (t === '') {
			alert("Вы не выбрали трекер!");
			$(s).removeAttr('disabled');
		}
		if (n === '') {
			alert("Вы не указали имя пользователя!");
			$(s).removeAttr('disabled');
		}
	}
	return false;
});

_postAction = function(actionStruct, callback, format) {
	if (format == null) {
		format = null;
	}
	$.post("action.php", actionStruct, callback, format !== null ? format : void 0);
};

_internalAction = function(actionStruct) {
	$('#notice').empty().append('Обрабатывается запрос...').fadeIn();
	_postAction(actionStruct, function(data) {
		$('#notice').empty().attr('background', '#FF6633').append(data).delay(3000).fadeOut(400);
		return $.get("include/show_watching.php", function(data) {
			$('#content').delay(3000).empty().append(data);
		});
	});
	return false;
};

delete_user = function(id) {
	_internalAction({
		action: 'delete_user',
		user_id: id
	});
};

delete_from_buffer = function(id) {
	_internalAction({
		action: 'delete_from_buffer',
		id: id
	});
};

transfer_from_buffer = function(id) {
	_internalAction({
		action: 'transfer_from_buffer',
		id: id
	});
};

theme_add = function(id, user_id) {
	_postAction({
		action: 'threme_add',
		id: id,
		user_id: user_id
	}, function(data) {
		if (data.error) {
			$('#notice').empty().attr('background', '#FF6633').append('Ошибка передачи данных<br/>Попробуйте ещё раз.').delay(3000).fadeOut(400);
		} else {
			$.get("include/show_watching.php", (function(data) {
				$('#content').empty().append(data);
				return false;
			}), "json");
		}
	});
	return false;
};

$("#theme_clear").submit(function() {
	_internalAction({
		action: 'threme_clear'
	});
});

$("#credential").submit(function() {
	var $form, b, id, l, p;
	$form = $(this);
	b = $form.find('input[type=button]');
	id = $form.find('input[name="id"]').val();
	l = $form.find('input[name="log"]').val();
	p = $form.find('input[name="pass"]').val();
	$(b).attr('disabled', 'disabled');
	if (l !== '' && p !== '') {
		$('#notice').empty().append('Обрабатывается запрос...').fadeIn();
		_postAction({
			action: 'update_credentials',
			id: id,
			log: l,
			pass: p
		}, function(data) {
			$('#notice').empty().attr('background', '#FF6633').append(data).delay(3000).fadeOut(400);
			$(b).removeAttr('disabled');
		});
	} else {
		if (l === '') {
			alert("Вы не указали логин!");
		}
		if (p === '') {
			alert("Вы не указали пароль!");
		}
		$(b).removeAttr('disabled');
		return;
	}
	return false;
});

$("#setting").submit(function() {
	var $form, a, e, p, s, s_w;
	$form = $(this);
	s = $form.find('input[type=submit]');
	p = $form.find('input[name="path"]').val();
	e = $form.find('input[name="email"]').val();
	s = $form.find('input[name="send"]').attr('checked');
	s_w = $form.find('input[name="send_warning"]').attr('checked');
	a = $form.find('input[name="auth"]').attr('checked');
	$(b).attr('disabled', 'disabled');
	$('#notice').empty().append('Обрабатывается запрос...').fadeIn();
	_postAction({
		action: 'update_settings',
		path: p,
		email: e,
		send: s,
		send_warning: s_w,
		auth: a
	}, function(data) {
		$('#notice').empty().attr('background', '#FF6633').append(data).delay(3000).fadeOut(400);
		$(s).removeAttr('disabled');
	});
	return false;
});

$("#change_pass").submit(function() {
	var $form, p, p2, s;
	$form = $(this);
	s = $form.find('input[type=submit]');
	p = $form.find('input[name="password"]').val();
	p2 = $form.find('input[name="password2"]').val();
	$(b).attr('disabled', 'disabled');
	if (p !== '') {
		if (p !== p2) {
			alert('Пароль и подтверждение должны совпадать.');
			$(s).removeAttr('disabled');
		} else {
			$('#notice').empty().append('Обрабатывается запрос...').fadeIn();
			_postAction({
				action: 'change_pass',
				pass: p
			}(function(data) {
				if (data.error) {
					$('#notice').empty().attr('background', '#FF6633').append(data).delay(3000).fadeOut(400);
				} else {
					document.location.reload();
				}
			}), "json");
		}
	} else {
		alert('Пароль не может быть пустым.');
		$(s).removeAttr('disabled');
	}
	return false;
});

del = function(id) {
	_internalAction({
		action: 'del',
		id: id
	});
};

changefunc = function() {
	var d, select, selectedText, tracker, _i, _len, _ref;
	select = document.getElementById("selectfunc");
	selectedText = select.options[select.selectedIndex].text;
	_ref = ['kinozal.tv', 'lostfilm.tv', 'nnm-club.me', 'novafilm.tv', 'rutracker.org'];
	for (_i = 0, _len = _ref.length; _i < _len; _i++) {
		tracker = _ref[_i];
		d = selectedText === tracker ? "block" : "none";
		document.getElementById("" + tracker + "_label").style.display = d;
	}
};

changeField = function() {
	var tracker;
	tracker = document.getElementById("tracker").value;
	if (tracker === 'lostfilm.tv') {
		$('#changedField').empty().append('<span class="quality"><input type="radio" name="hd" value="0"> SD качество<br/><input type="radio" name="hd" value="1"> HD качество<br/><input type="radio" name="hd" value="2"> HD MP4</span>');
	}
	if (tracker = 'novafilm.tv') {
		$('#changedField').empty().append('<input type="checkbox" name="hd"> HD качество</label>');
	}
};
